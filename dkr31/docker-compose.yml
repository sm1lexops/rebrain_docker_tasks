version: "3.8"
services:
  nginx:
    image: "nginx:alpine"
    ports:
      - "20000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    restart: always
    depends_on:
      - kibana
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: nginx.access
    networks:
      - efk
        #extra_hosts:
            #- "fluentd:172.18.0.2"

  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - fluentd_data:/fluentd/log
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - efk
    environment:
      FLUENT_ELASTICSEARCH_HOST: elasticsearch
      FLUENT_ELASTICSEARCH_PORT: 9200
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "2"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      - "discovery.type=single-node"
      - "node.name=elasticsearch"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ELASTIC_PASSWORD=changeme"
      - 'xpack.security.enabled=false'
      - 'node.master=true'
      - 'node.data=true'
      - 'node.ingest=true'
    ulimits:
      memlock:
        soft: -1
        hard: -1 
    volumes:
      - esdata:/usr/share/elasticsearch/data
    expose:
      - "9200"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - efk
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224 
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: elasticsearch.access

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    links:
      - "elasticsearch"
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - efk
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224 
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: kibana.access

  mysql:
    image: "mysql:5.7"
    environment:
      MYSQL_ROOT_PASSWORD: voting
      MYSQL_DATABASE: voting
      MYSQL_USER: voting
      MYSQL_PASSWORD: voting
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    networks:
      - efk
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224 
        tag: mysql.access

  redis:
    image: "redis:7.2-alpine"
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: always
    networks:
      - efk
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224 
        tag: redis.access
  voting:
    build:
      dockerfile: ./Dockerfile
    env_file:
      - .env.dist
    depends_on:
      - mysql
    ports:
      - "9000:9000"
    expose:
      - "9000"
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224 
        tag: voting.access
    networks:
      - efk
    
networks:
  efk:
    driver: bridge
volumes:
  fluentd_data:
  esdata:
  mysql_data:
  redis_data: